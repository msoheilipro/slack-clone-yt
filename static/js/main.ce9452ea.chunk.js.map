{"version":3,"sources":["features/userSlice.js","firebase.js","components/Login.js","components/Header.js","features/appSlice.js","components/SidebarOption.js","components/Sidebar.js","components/ChatInput.js","components/Message.js","components/Chat.js","App.js","app/store.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","Login","dispatch","useDispatch","LoginContainer","LoginIneerContainer","src","alt","Button","onClick","e","preventDefault","signInWithPopup","then","displayName","email","photoUrl","photoURL","catch","error","alert","message","styled","div","Header","useAuthState","HeaderContainer","HeaderLeft","HeaderAvatar","signOut","HeaderSearch","placeholder","HeaderRight","Avatar","appSlice","roomId","enterRoom","selectRoomId","app","SidebarOption","Icon","title","addChannelOption","id","SidebarOptionContainer","channelName","prompt","collection","add","fontSize","style","padding","SidebarOptionChannel","h3","Sidebar","useCollection","channels","SidebarContainer","SidebarHeader","SidebarInfo","InsertCommentIcon","InboxIcon","DraftsIcon","BookmarkBorderIcon","PeopleAltIcon","AppsIcon","FileCopyIcon","ExpandLessIcon","ExpandMoreIcon","AddIcon","docs","map","doc","data","ChatInput","ChatInputContainer","Message","timestamp","userImage","MessageContainer","MessageInfo","Date","toDate","toUTCString","Chat","chatRef","useRef","useSelector","useDocument","roomDetails","orderBy","roomMessages","loading","useEffect","current","scrollIntoView","behavior","ChatContainer","ChatMessages","ChatBottom","ref","channelId","App","AppLoading","AppLoadingContents","color","fadeIn","className","AppBody","exact","path","store","configureStore","reducer","userReducer","appReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce9452ea.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    user: null,\n  },\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload\n    },\n    logout: (state) => {\n      state.user = null;\n    },\n  },\n});\n\nexport const { login, logout } = userSlice.actions;\n\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer;\n","import firebase from 'firebase';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyB_DyOdvLUY3PoW1mgRuQ32D5nzzRYXmNI',\n  authDomain: 'slack-clone-80d0a.firebaseapp.com',\n  projectId: 'slack-clone-80d0a',\n  storageBucket: 'slack-clone-80d0a.appspot.com',\n  messagingSenderId: '1068485512059',\n  appId: '1:1068485512059:web:dacde1b48a5ef6d5b6cbde',\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { db, auth, provider };\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../features/userSlice';\nimport { auth, provider } from '../firebase';\nimport { Button } from '@material-ui/core';\nimport styled from 'styled-components';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n\n  const signIn = (e) => {\n    e.preventDefault();\n    auth\n      .signInWithPopup(provider)\n      .then((user) =>\n        dispatch(\n          login({\n            displayName: user.displayName,\n            email: user.email,\n            photoUrl: user.photoURL,\n          })\n        )\n      )\n      .catch((error) => alert(error.message));\n  };\n\n  return (\n    <LoginContainer>\n      <LoginIneerContainer>\n        <img\n          src='https://cdn.mos.cms.futurecdn.net/SDDw7CnuoUGax6x9mTo7dd.jpg'\n          alt=''\n        />\n        <h1>Sign In To The Slack Comunity</h1>\n        <p>my.slack.com</p>\n        <Button onClick={signIn}>Sign in with Google</Button>\n      </LoginIneerContainer>\n    </LoginContainer>\n  );\n};\n\nexport default Login;\n\nconst LoginContainer = styled.div`\n  background-color: #f8f8f8;\n  height: 100vh;\n  display: grid;\n  place-items: center;\n`;\n\nconst LoginIneerContainer = styled.div`\n  padding: 100px;\n  text-align: center;\n  background-color: white;\n  border-radius: 10px;\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 2px rgba(0, 0, 0, 0.24);\n\n  > img {\n    object-fit: contain;\n    height: 100px;\n    margin-bottom: 40px;\n  }\n\n  > button {\n    margin-top: 50px;\n    text-transform: inherit !important;     // What text-transform:inherit do for us? and Why !important?\n    background-color: #0a8d48 !important;   // Why !important?\n    color: white;\n  }\n`;\n","import React from 'react';\nimport { Avatar } from '@material-ui/core';\nimport { auth } from '../firebase';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useDispatch } from 'react-redux';\nimport { logout } from '../features/userSlice';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport SearchIcon from '@material-ui/icons/Search';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport styled from 'styled-components';\n\n\nconst Header = () => {\n  const [user] = useAuthState(auth);\n  const dispatch = useDispatch();\n\n  const signOut = () => {\n    auth.signOut()\n    .then(() => {\n      dispatch(logout());\n    });\n  };\n\n  return (\n    <HeaderContainer>\n      <HeaderLeft>\n        <HeaderAvatar\n          // onClick={() => auth.signOut()}\n          onClick={signOut}\n          alt={user?.displayName}\n          src={user?.photoURL}\n        />\n        <AccessTimeIcon />\n      </HeaderLeft>\n\n      <HeaderSearch>\n        <SearchIcon />\n        <input placeholder='Search...' />\n      </HeaderSearch>\n\n      <HeaderRight>\n        <HelpOutlineIcon />\n      </HeaderRight>\n    </HeaderContainer>\n  );\n};\n\nexport default Header;\n\n// ------------------------------------------------------------------- //\n/*\n  import React from 'react';\n  import { useDispatch, useSelector } from \"react-redux\";\n  import { logout, selectUser } from '../features/userSlice';\n  import { auth } from '../firebase';\n  import { Avatar } from '@material-ui/core';\n  import AccessTimeIcon from '@material-ui/icons/AccessTime';\n  import SearchIcon from '@material-ui/icons/Search';\n  import HelpOutlineIcon from '@material-ui/icons/HelpOutline';\n  import styled from 'styled-components';\n\n\n  const Header = () => {\n    const [user] = useSelector(selectUser);\n    const dispatch = useDispatch();\n\n    const signOut = () => {\n      auth.signOut()\n      .then(() => {\n        dispatch(logout());\n      });\n    };\n\n    return (\n      <HeaderContainer>\n        <HeaderLeft>\n          <HeaderAvatar\n            onClick={signOut}\n            alt={user?.displayName}\n            src={user?.photoURL}\n          />\n          <AccessTimeIcon />\n        </HeaderLeft>\n\n        <HeaderSearch>\n          <SearchIcon />\n          <input placeholder='Search...' />\n        </HeaderSearch>\n\n        <HeaderRight>\n          <HelpOutlineIcon />\n        </HeaderRight>\n      </HeaderContainer>\n    );\n  };\n\n  export default Header;\n*/\n// ------------------------------------------------------------------- //\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  position: fixed;\n  width: 100%;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px 0;\n  background-color: var(--slack-color);\n  color: white;\n`;\n\nconst HeaderLeft = styled.div`\n  flex: 0.3;\n  display: flex;\n  align-items: center;\n  margin-left: 20px;\n  > .MuiSvgIcon-root {\n    margin-left: auto;\n    margin-right: 30px;\n  }\n`;\n\nconst HeaderAvatar = styled(Avatar)`\n  cursor: pointer;\n  :hover {\n    opacity: 0.8;\n  }\n`;\n\nconst HeaderSearch = styled.div`\n  flex: 0.4;\n  opacity: 1;\n  border-radius: 6px;\n  background-color: #421f44;\n  text-align: center;\n  display: flex;\n  padding: 0 50px;\n  color: gray;\n  border: 1px solid gray;\n  > input {\n    background-color: transparent;\n    border: none;\n    text-align: center;\n    min-width: 30vw;\n    outline: 0;\n    color: white;\n  }\n`;\n\nconst HeaderRight = styled.div`\n  flex: 0.3;\n  display: flex;\n  align-items: flex-end;\n  > .MuiSvgIcon-root {\n    margin-left: auto;\n    margin-right: 20px;\n  }\n`;\n\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const appSlice = createSlice({\n  name: 'app',\n  initialState: {\n    roomId: null,\n  },\n  reducers: {\n    enterRoom: (state, action) => {\n      state.roomId = action.payload.roomId;\n    },\n  },\n});\n\nexport const { enterRoom } = appSlice.actions;\n\nexport const selectRoomId = (state) => state.app.roomId;\n\nexport default appSlice.reducer;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { db } from '../firebase';\nimport { useDispatch } from 'react-redux';\nimport { enterRoom } from '../features/appSlice';\n\nconst SidebarOption = ({ Icon, title, addChannelOption, id }) => {\n  const dispatch = useDispatch();\n\n  const addChannel = () => {\n    const channelName = prompt('Please enter the channel name');\n    if (channelName) {\n      db.collection('rooms').add({\n        name: channelName,\n      });\n    }\n  };\n\n  const selectChannel = () => {\n    if (id) {\n      dispatch(\n        enterRoom({\n          roomId: id,\n        })\n      );\n    }\n  };\n\n  return (\n    <SidebarOptionContainer\n      onClick={addChannelOption ? addChannel : selectChannel}\n    >\n      {/* {Icon && <Icon fontSize='small' style={{ padding: '10px' }} />} */}\n      {Icon ? (\n        <>\n          <Icon fontSize='small' style={{ padding: '10px' }} />\n          <h3>{title}</h3>\n        </>\n      ) : (\n        <SidebarOptionChannel>\n          <span>#</span>\n          {title}\n        </SidebarOptionChannel>\n      )}\n    </SidebarOptionContainer>\n  );\n};\n\nexport default SidebarOption;\n\nconst SidebarOptionContainer = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 12px;\n  padding-left: 2px;\n  cursor: pointer;\n  :hover {\n    opacity: 0.9;\n    background-color: #340e36;\n  }\n\n  > h3 {\n    font-weight: 500;\n  }\n\n  > h3 > span {\n    padding: 15px;\n  }\n\n`;\n\nconst SidebarOptionChannel = styled.h3`\n  padding: 10px 0;\n  font-weight: 300;\n`;\n","import React from 'react';\nimport SidebarOption from './SidebarOption';\nimport { useCollection } from 'react-firebase-hooks/firestore';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport CreateIcon from '@material-ui/icons/Create';\nimport InsertCommentIcon from '@material-ui/icons/InsertComment';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddIcon from '@material-ui/icons/Add';\nimport styled from 'styled-components';\nimport { auth, db } from '../firebase';\nimport { useAuthState } from 'react-firebase-hooks/auth';\n\n// import { useSelector } from 'react-redux';\n// import { selectUser } from '../features/userSlice';\n\nconst Sidebar = () => {\n  //   const [channels, loading, error] = useCollection(db.collection('rooms'));\n  //   const [user, loading, error] = useAuthState(auth);\n\n  const [channels] = useCollection(db.collection('rooms'));\n  const [user] = useAuthState(auth);\n\n  // const user = useSelector(selectUser);\n\n  return (\n    <SidebarContainer>\n      <SidebarHeader>\n        <SidebarInfo>\n          <h2>MS</h2>\n          <h3>\n            <FiberManualRecordIcon />\n            {user?.displayName}\n          </h3>\n        </SidebarInfo>\n        <CreateIcon />\n      </SidebarHeader>\n\n      <SidebarOption Icon={InsertCommentIcon} title='Threads' />\n      <SidebarOption Icon={InboxIcon} title='Mentions \t&amp; reactions' />\n      <SidebarOption Icon={DraftsIcon} title='Saved items' />\n      <SidebarOption Icon={BookmarkBorderIcon} title='Channel browser' />\n      <SidebarOption Icon={PeopleAltIcon} title='People &amp; user groups' />\n      <SidebarOption Icon={AppsIcon} title='Apps' />\n      <SidebarOption Icon={FileCopyIcon} title='File browser' />\n      <SidebarOption Icon={ExpandLessIcon} title='Show less' />\n      <hr />\n      <SidebarOption Icon={ExpandMoreIcon} title='Channels' />\n      <hr />\n      <SidebarOption\n        Icon={AddIcon}\n        addChannelOption={true}\n        title='Add Channel'\n      />\n      {/* <SidebarOption Icon={AddIcon} addChannelOption title='Add Channel' /> */}\n\n      {channels?.docs.map((doc) => {\n        // console.log(doc.data());\n        return (\n          <SidebarOption key={doc.id} id={doc.id} title={doc.data().name} />\n        );\n      })}\n      {/*\n      {channels?.docs.map((doc) => (\n        <SidebarOption key={doc.id} id={doc.id} title={doc.data().name} />\n      ))}\n\n      {channels?.docs.map(({ id, data: { name } }) => {\n        return <SidebarOption key={id} id={id} title={name} />;\n      })}\n\n      {channels?.docs.map(({ id, data: { name } }) => (\n        <SidebarOption key={id} id={id} title={name} />\n      ))}\n*/}\n    </SidebarContainer>\n  );\n};\n\nexport default Sidebar;\n\nconst SidebarContainer = styled.div`\n  flex: 0.3;\n  max-width: 260px;\n  color: white;\n  background-color: var(--slack-color);\n  border-top: 1px solid #49274b;\n  margin-top: 60px;\n  overflow-y: scroll;\n  > hr {\n    margin-top: 10px;\n    margin-bottom: 10px;\n    border: 1px solid #49274b;\n  }\n`;\n\nconst SidebarHeader = styled.div`\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid #49274b;\n  padding: 13px;\n\n  > .MuiSvgIcon-root {\n    padding: 8px;\n    color: #49274b;\n    font-size: 18px;\n    background-color: white;\n    border-radius: 50%;\n  }\n`;\n\nconst SidebarInfo = styled.div`\n  flex: 1;\n  > h2 {\n    font-size: 15px;\n    font-weight: 900;\n    margin-bottom: 5px;\n  }\n\n  > h3 {\n    display: flex;\n    font-size: 13px;\n    font-weight: 400;\n    align-items: center;\n  }\n\n  > h3 > .MuiSvgIcon-root {\n    font-size: 14px;\n    margin-top: 1px;\n    margin-right: 2px;\n    color: green;\n  }\n`;\n// ............................................................................ //\n/*\n  import React, { useEffect, useState } from 'react';\n  import SidebarOption from './SidebarOption';\n  import { useSelector } from 'react-redux';\n  import { selectUser } from '../features/userSlice';\n  import { db } from '../firebase';\n  import FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\n  import CreateIcon from '@material-ui/icons/Create';\n  import InsertCommentIcon from '@material-ui/icons/InsertComment';\n  import InboxIcon from '@material-ui/icons/Inbox';\n  import DraftsIcon from '@material-ui/icons/Drafts';\n  import BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\n  import PeopleAltIcon from '@material-ui/icons/PeopleAlt';\n  import AppsIcon from '@material-ui/icons/Apps';\n  import FileCopyIcon from '@material-ui/icons/FileCopy';\n  import ExpandLessIcon from '@material-ui/icons/ExpandLess';\n  import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n  import AddIcon from '@material-ui/icons/Add';\n  import styled from 'styled-components';\n\n  const Sidebar = () => {\n    const [channels, setChannels] = useState([]);\n\n    useEffect(() => {\n      db.collection('rooms').onSnapshot((snapshot) =>\n        setChannels(\n          snapshot.docs.map(\n            (doc) => (\n              console.log(doc),\n              {\n                id: doc.id,\n                data: doc.data(),\n              }\n            )\n          )\n        )\n      );\n    }, []);\n\n    const user = useSelector(selectUser);\n\n    return (\n      <SidebarContainer>\n        <SidebarHeader>\n          <SidebarInfo>\n            <h2>MS</h2>\n            <h3>\n              <FiberManualRecordIcon />\n              {user?.displayName}\n            </h3>\n          </SidebarInfo>\n\n          <CreateIcon />\n        </SidebarHeader>\n\n        <SidebarOption Icon={InsertCommentIcon} title='Threads' />\n        <SidebarOption Icon={InboxIcon} title='Mentions   &amp; reactions' />\n        <SidebarOption Icon={DraftsIcon} title='Saved items' />\n        <SidebarOption Icon={BookmarkBorderIcon} title='Channel browser' />\n        <SidebarOption Icon={PeopleAltIcon} title='People &amp; user groups' />\n        <SidebarOption Icon={AppsIcon} title='Apps' />\n        <SidebarOption Icon={FileCopyIcon} title='File browser' />\n        <SidebarOption Icon={ExpandLessIcon} title='Show less' />\n        <hr />\n        <SidebarOption Icon={ExpandMoreIcon} title='Channels' />\n        <hr />\n        <SidebarOption\n          Icon={AddIcon}\n          addChannelOption={true}\n          title='Add Channel'\n        />\n\n        {channels.map(({ id, data: { name } }) => (\n          <SidebarOption key={id} id={id} title={name} />\n        ))}\n      </SidebarContainer>\n    );\n  };\n\n  export default Sidebar;\n\n  const SidebarContainer = styled.div`\n    flex: 0.3;\n    max-width: 260px;\n    color: white;\n    background-color: var(--slack-color);\n    border-top: 1px solid #49274b;\n    margin-top: 60px;\n    overflow-y: scroll;\n    > hr {\n      margin-top: 10px;\n      margin-bottom: 10px;\n      border: 1px solid #49274b;\n    }\n  `;\n\n  const SidebarHeader = styled.div`\n    flex: 1;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    border-bottom: 1px solid #49274b;\n    padding: 13px;\n\n    > .MuiSvgIcon-root {\n      padding: 8px;\n      color: #49274b;\n      font-size: 18px;\n      background-color: white;\n      border-radius: 50%;\n    }\n  `;\n\n  const SidebarInfo = styled.div`\n    flex: 1;\n    > h2 {\n      font-size: 15px;\n      font-weight: 900;\n      margin-bottom: 5px;\n    }\n\n    > h3 {\n      display: flex;\n      font-size: 13px;\n      font-weight: 400;\n      align-items: center;\n    }\n\n    > h3 > .MuiSvgIcon-root {\n      font-size: 14px;\n      margin-top: 1px;\n      margin-right: 2px;\n      color: green;\n    }\n  `;\n*/  \n// ............................................................................ //\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst ChatInput = () => {\n    return (\n        <ChatInputContainer>\n            \n        </ChatInputContainer>\n    )\n}\n\nexport default ChatInput;\n\nconst ChatInputContainer=styled.div``\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import styled from 'styled-components';\n// import { Button } from '@material-ui/core';\n// import { auth, db } from '../firebase';\n// import { useAuthState } from 'react-firebase-hooks/auth';\n// import firebase from 'firebase';\n\n// const ChatInput = ({ chatRef, channelName, channelId }) => {\n//   const [input, setInput] = useState('');\n//   const [user] = useAuthState(auth);\n\n//   const sendMessage = (e) => {\n//     e.preventDefault(); //Prevent refresh\n\n//     if (!channelId) {\n//       return false;\n//     }\n\n//     db\n//     .collection('rooms')\n//     .doc(channelId)\n//     .collection('messages')\n//     .add({\n//       message: input,\n//       timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n//       user: user.displayName,\n//       userImage: user.photoURL,\n//     });\n\n//      chatRef.current.scrollIntoView({\n//         behavior: 'smooth',\n//      })\n\n//     setInput('');\n//   };\n\n//   return (\n//     <ChatInputContainer>\n//       <form>\n//         <input\n//           type='text'\n//           value={input}\n//           onChange={(e) => setInput(e.target.value)}\n//           placeholder={`Message#${channelName}`}\n//         />\n//         <Button hidden type='submit' onClick={sendMessage}>\n//           SEND\n//         </Button>\n//       </form>\n//     </ChatInputContainer>\n//   );\n// };\n\n// export default ChatInput;\n\n// const ChatInputContainer = styled.div`\n//   border-radius: 20px;\n//   > form {\n//     position: relative;\n//     display: flex;\n//     justify-content: center;\n//   }\n//   > form > input {\n//     position: fixed;\n//     bottom: 30px;\n//     width: 60%;\n//     border: 1px solid gray;\n//     border-radius: 3px;\n//     padding: 20px;\n//     outline: none;\n//   }\n//   > form > button {\n//     display: none !important;\n//   }\n// `;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Message = ({ message, timestamp, user, userImage }) => {\n  return (\n    <MessageContainer>\n      <img src={userImage} alt='' />\n      <MessageInfo>\n        <h4>\n          {user}\n          {''}\n          <span>{new Date(timestamp?.toDate()).toUTCString()}</span>\n        </h4>\n        <p>{message}</p>\n      </MessageInfo>\n    </MessageContainer>\n  );\n};\n\nexport default Message;\n\nconst MessageContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 20px;\n  > img {\n    height: 50px;\n    border-radius: 8px;\n  }\n`;\n\nconst MessageInfo = styled.div`\n  padding-left: 10px;\n  > h4 > span {\n    color: gray;\n    font-weight: 300;\n    margin-left: 4px;\n    font-size: 10px;\n  }\n`;\n","import React, { useRef } from 'react';\nimport { useCollection, useDocument } from 'react-firebase-hooks/firestore';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { selectRoomId } from '../features/appSlice';\nimport { db } from '../firebase';\nimport ChatInput from './ChatInput';\nimport Message from './Message';\nimport StarBorderOutlinedIcon from '@material-ui/icons/StarBorderOutlined';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport { useEffect } from 'react';\n\nconst Chat = () => {\n  const chatRef = useRef(null);\n\n  const roomId = useSelector(selectRoomId);\n\n  const [roomDetails] = useDocument(\n    roomId && db.collection('rooms').doc(roomId)\n  );\n  // console.log(roomDetails?.data());\n\n  const [roomMessages, loading] = useCollection(\n    roomId &&\n      db\n        .collection('rooms')\n        .doc(roomId)\n        .collection('messages')\n        .orderBy('timestamp', 'asc')\n  );\n  // console.log(roomMessages);\n\n  useEffect(() => {\n    chatRef?.current?.scrollIntoView({\n      behavior: 'smooth',\n    });\n  }, [roomId, loading]);\n  return (\n    <ChatContainer>\n      {roomDetails && roomMessages && (\n        <>\n          <Header>\n            <HeaderLeft>\n              <h4>\n                <span>#{roomDetails?.data().name}</span>\n              </h4>\n              <StarBorderOutlinedIcon />\n            </HeaderLeft>\n            <HeaderRight>\n              <p>\n                <InfoOutlinedIcon /> Details\n              </p>\n            </HeaderRight>\n          </Header>\n          <ChatMessages>\n            {roomMessages?.docs.map((doc) => {\n              // console.log(doc.data());\n              const { message, user, userImage, timestamp } = doc.data(); //Destructuring\n              return (\n                <Message\n                  key={doc.id}\n                  message={message}\n                  user={user}\n                  userImage={userImage}\n                  timestamp={timestamp}\n                />\n              );\n            })}\n            <ChatBottom ref={chatRef} />\n          </ChatMessages>\n\n          {/* <ChatMessages>\n            {roomMessages?.docs.map((doc) => {\n              console.log(doc.data())\n              return (     \n                  <Message\n                    key={doc.id}\n                    message={doc.data().message}\n                    timestamp={doc.data().timestamp}\n                    user={doc.data().user}\n                    userImage={doc.data().userImage}\n                  />\n              );\n            })}\n            <ChatBottom ref={chatRef} />\n          </ChatMessages> */}\n\n          {/* <ChatMessages>\n            {roomMessages?.docs.map((doc) => (\n              <Message\n                key={doc.id}\n                message={doc.data().message}\n                timestamp={doc.data().timestamp}\n                user={doc.data().user}\n                userImage={doc.data().userImage}\n              />\n            ))}\n            <ChatBottom ref={chatRef} />\n          </ChatMessages> */}\n\n          <ChatInput\n            chatRef={chatRef}\n            channelName={roomDetails?.data().name}\n            channelId={roomId}\n          />\n        </>\n      )}\n    </ChatContainer>\n  );\n};\n\nexport default Chat;\n\nconst ChatContainer = styled.div`\n  flex: 0.7;\n  flex-grow: 1;\n  overflow-y: scroll;\n  margin-top: 60px;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px;\n  border: 1px solid lightgray;\n`;\n\nconst HeaderLeft = styled.div`\n  display: flex;\n  align-items: center;\n\n  > h4 {\n    display: flex;\n    text-transform: lowercase;\n    margin-right: 10px;\n  }\n\n  > h4 > .MuiSvgIcon-root {\n    margin-left: 10px;\n    font-size: 18px;\n  }\n`;\n\nconst HeaderRight = styled.div`\n  > p {\n    display: flex;\n    align-items: center;\n    font-size: 14px;\n  }\n  > p > .MuiSvgIcon-root {\n    margin-right: 5px !important;\n    font-size: 16px;\n  }\n`;\n\nconst ChatMessages = styled.div``;\n\nconst ChatBottom = styled.div`\n  padding-bottom: 200px;\n`;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Login from './components/Login';\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport Chat from './components/Chat';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { auth } from './firebase';\nimport Spinner from 'react-spinkit';\nimport styled from 'styled-components';\nimport './App.css';\n\nfunction App() {\n  // const [user, loading, error] = useAuthState(auth);\n  const [user, loading] = useAuthState(auth);\n\n  if (loading) {\n    return (\n      <AppLoading>\n        <AppLoadingContents>\n          <img\n            src='https://cdn.mos.cms.futurecdn.net/SDDw7CnuoUGax6x9mTo7dd.jpg'\n            alt=''\n          />\n          <Spinner name='ball-spin-fade-loader' color='purple' fadeIn='none' />\n        </AppLoadingContents>\n      </AppLoading>\n    );\n  }\n\n  return (\n    <div className='app'>\n      <Router>\n        {!user ? (\n          <Login />\n        ) : (\n          <>\n            <Header />\n            <AppBody>\n              <Sidebar />\n              <Switch>\n                <Route exact path='/'>\n                  <Chat />\n                </Route>\n              </Switch>\n            </AppBody>\n          </>\n        )}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\nconst AppBody = styled.div`\n  display: flex;\n  height: 100vh;\n`;\n\nconst AppLoading = styled.div`\n  display: grid;\n  place-items: center;\n  height: 100vh;\n  width: 100%;\n`;\n\nconst AppLoadingContents = styled.div`\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-bottom: 100px;\n  > img {\n    object-fit: contain;\n    height: 100px;\n    padding: 20px;\n    margin-bottom: 40px;\n  }\n`;\n\n// ............................................................................ //\n// How I can implement loading feature?\n/*  \n  import React, { useEffect } from 'react';\n  import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n  import Login from './components/Login';\n  import Header from './components/Header';\n  import Sidebar from './components/Sidebar';\n  import Chat from './components/Chat';\n  import { useDispatch, useSelector } from 'react-redux';\n  import { login, selectUser } from './features/userSlice';\n  import { auth } from './firebase';\n  import styled from 'styled-components';\n  import './App.css';\n\n  function App() {\n    const user = useSelector(selectUser);\n    const dispatch = useDispatch();\n                                                  \n    useEffect(() => {\n      auth.onAuthStateChanged((user) => {\n        console.log(user);\n        if (user) {\n          dispatch(\n            login({\n              displayName: user.displayName,\n              email: user.email,\n              photoUrl: user.photoURL,\n            })\n          );\n        }\n      });\n    }, [dispatch]);\n\n    return (\n      <div className='app'>\n        <Router>\n          {!user ? (\n            <Login />\n          ) : (\n            <>\n              <Header />\n              <AppBody>\n                <Sidebar />\n                <Switch>\n                  <Route exact path='/'>\n                    <Chat />\n                  </Route>\n                </Switch>\n              </AppBody>\n            </>\n          )}\n        </Router>\n      </div>\n    );\n  }\n\n  export default App;\n\n  const AppBody = styled.div`\n    display: flex;\n    height: 100vh;\n  `;\n*/\n// ............................................................................ //\n","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../features/userSlice';\nimport appReducer from '../features/appSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n    app: appReducer,\n  },\n});\n\n// .................................................. //\n/*\n  import { configureStore } from '@reduxjs/toolkit';\n  import userReducer from '../features/userSlice';\n  import appReducer from '../features/appSlice';\n\n  export default configureStore({\n    reducer: {\n      user: userReducer,\n      app:appReducer\n    },\n  })\n*/\n// .................................................. //\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}